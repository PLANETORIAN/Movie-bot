import nlp from "compromise";
const stopWords = new Set([
    "movies",
    "cinema",
    "film industry",
    "Hollywood",
    "Bollywood",
    "Tollywood",
    "Kollywood",
    "Mollywood",
    "blockbusters",
    "indie films",
    "movie night",
    "film reviews",
    "actor",
    "actress",
    "director",
    "producer",
    "script",
    "screenwriting",
    "storytelling",
    "dialogues",
    "cinematography",
    "camera angles",
    "special effects",
    "visual effects",
    "VFX",
    "CGI",
    "animation",
    "soundtrack",
    "background score",
    "musicals",
    "biopics",
    "documentaries",
    "mockumentaries",
    "thrillers",
    "horror movies",
    "mystery films",
    "psychological thrillers",
    "sci-fi movies",
    "fantasy films",
    "romantic movies",
    "romantic comedies",
    "action films",
    "martial arts movies",
    "historical films",
    "war movies",
    "superhero movies",
    "comic book adaptations",
    "crime movies",
    "gangster films",
    "drama films",
    "satire movies",
    "classic movies",
    "silent films",
    "black and white movies",
    "nostalgic films",
    "period films",
    "epic movies",
    "sports movies",
    "underrated films",
    "cult classics",
    "B-movies",
    "arthouse films",
    "experimental cinema",
    "short films",
    "anthology movies",
    "film noir",
    "neo-noir",
    "westerns",
    "spaghetti westerns",
    "Disney movies",
    "Pixar films",
    "DreamWorks Animation",
    "Studio Ghibli",
    "anime movies",
    "Korean cinema",
    "Japanese movies",
    "French cinema",
    "European films",
    "Chinese movies",
    "Russian films",
    "Spanish movies",
    "Latin American cinema",
    "African cinema",
    "Middle Eastern films",
    "independent films",
    "streaming services",
    "OTT platforms",
    "Netflix originals",
    "Prime Video",
    "Disney+",
    "Hulu",
    "HBO Max",
    "Apple TV+",
    "Peacock",
    "Paramount+",
    "theater experience",
    "IMAX",
    "Dolby Cinema",
    "3D movies",
    "4D cinema",
    "drive-in movies",
    "film festivals",
    "Cannes Film Festival",
    "Sundance Film Festival",
    "Venice Film Festival",
    "Toronto Film Festival",
    "Oscars",
    "Academy Awards",
    "Golden Globes",
    "BAFTA",
    "Screen Actors Guild Awards",
    "Critics' Choice Awards",
    "César Awards",
    "National Film Awards",
    "Indian Filmfare Awards",
    "box office hits",
    "highest-grossing movies",
    "movie franchises",
    "film sequels",
    "trilogies",
    "prequels",
    "spin-offs",
    "cinematic universes",
    "Marvel Cinematic Universe",
    "DC Extended Universe",
    "Harry Potter series",
    "Lord of the Rings",
    "Star Wars saga",
    "Fast & Furious",
    "James Bond movies",
    "Mission: Impossible",
    "The Matrix series",
    "The Godfather trilogy",
    "Hunger Games",
    "Twilight saga",
    "Horror movie franchises",
    "Halloween movies",
    "Scream movies",
    "Final Destination series",
    "Conjuring Universe",
    "Paranormal Activity",
    "Saw franchise",
    "Disney live-action remakes",
    "Pixar sequels",
    "superhero team-ups",
    "crossovers",
    "best movie twists",
    "iconic movie quotes",
    "movie easter eggs",
    "post-credit scenes",
    "best movie villains",
    "legendary actors",
    "best film directors",
    "underrated performances",
    "acting masterclasses",
    "behind-the-scenes",
    "filmmaking process",
    "film production",
    "movie marketing",
    "movie trailers",
    "teasers",
    "sneak peeks",
    "fan theories",
    "movie leaks",
    "film distribution",
    "celebrity interviews",
    "red carpet events",
    "box office records",
    "critically acclaimed films",
    "cult movie followings",
    "movie memes",
    "best movie soundtracks",
    "Oscar-winning performances",
    "cinematic masterpieces",
    "best movies of all time",
    "new movie releases",
    "upcoming films",
    "anticipated movies",
    "movie date",
    "romantic movie night",
    "date night movies",
    "Netflix and chill",
    "drive-in movie date",
    "cozy movie night",
    "romantic comedies",
    "classic love stories",
    "best couples' movies",
    "snacks for movie night",
    "home theater date",
    "movies for anniversaries",
    "candlelight movie night",
    "first date movie ideas",
    "tearjerker love stories",
    "funny rom-coms",
    "romantic drama films",
    "picnic and movie date",
    "outdoor projector movie",
    "Disney love stories",
    "Valentine’s Day movies",
    "movies with unforgettable kisses",
    "underrated romantic movies",
    "cute animated couple movies",
    "romantic fantasy films",
    "relationship goals in movies",
    "movies about first love",
    "love triangle movies",
    "romantic thriller films",
    "late-night cuddly movies",
    "binge-watch",
    "top series",
    "crime thriller",
    "dark comedy",
    "romantic drama",
    "sci-fi series",
    "action-packed",
    "mystery show",
    "drama series",
    "superhero show",
    "true crime",
    "animated series",
    "underrated shows",
    "Netflix series",
    "Prime Video",
    "HBO Max",
    "Disney+",
    "mini-series",
    "web dramas",
    "K-dramas",
    "sitcoms",
    "mockumentary",
    "psychological thriller",
    "fantasy series",
    "adventure series",
    "suspense series",
    "period drama",
    "horror series",
    "legal drama",
    "reality shows",
    "anime series",
    "top anime",
    "action anime",
    "romance anime",
    "fantasy anime",
    "shonen anime",
    "shojo anime",
    "isekai anime",
    "mecha anime",
    "slice of life",
    "anime movies",
    "sports anime",
    "mystery anime",
    "thriller anime",
    "psychological anime",
    "supernatural anime",
    "sci-fi anime",
    "comedy anime",
    "horror anime",
    "drama anime",
    "underrated anime",
    "classic anime",
    "new anime",
    "anime streaming",
    "Crunchyroll",
    "Funimation",
    "Netflix anime",
    "anime OST",
    "manga adaptation",
    "anime fandom"
]

);

export default function extractKeywords(sentence) {
    const doc = nlp(sentence);
    const terms = doc.terms().out("array");
    const keywords = terms.filter((word) => !stopWords.has(word.toLowerCase()));
    return keywords;
}